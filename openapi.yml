openapi: 3.1.0
info:
  title: FirstQuadrant API
  description: The FirstQuadrant API is used to interact with FirstQuadrant programmatically. We also have SDKs available (coming soon).
  termsOfService: https://firstquadrant.ai/terms
  contact:
    email: inquiry@firstquadrant.ai
  version: 0.0.0
externalDocs:
  description: FirstQuadrant API documentation
  url: https://docs.firstquadrant.ai
servers:
  - url: https://api.firstquadrant.ai
tags:
  - name: teams
    description: Operations about your team
  - name: conversations
    description: Inform FirstQuadrant about events using incoming webhooks
paths:
  /teams/me:
    get:
      tags:
        - teams
      description: Get the team associated with the API key.
      responses:
        "200":
          description: Team object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
      security:
        - api_key:
            - read:team
  /teams/{teamId}:
    get:
      tags:
        - teams
      description: Get a team by ID.
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: Team ID, starting with `tea_`
          example: tea_2MSb8jd6VDptcAcVJuPcJhte3Yc
      responses:
        "200":
          description: Team object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
      security:
        - api_key:
            - read:team
    patch:
      tags:
        - teams
      description: Update a team by ID.
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: Team ID, starting with `tea_`
          example: tea_2MSb8jd6VDptcAcVJuPcJhte3Yc
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamBody"
        required: true
      responses:
        "200":
          description: Team object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
      security:
        - api_key:
            - write:team
  /teams/{teamId}/conversations/won:
    post:
      tags:
        - conversations
      description: Mark any open conversations with a particular lead as "Won" as a custom goal.
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: Team ID, starting with `tea_`
          example: tea_2MSb8jd6VDptcAcVJuPcJhte3Yc
      requestBody:
        description: Find conversations using the given email address and create unique goal events based on the idempotency key.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarkConversationAsWonBody"
        required: true
      responses:
        "200":
          description: Successfully queued operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
      security:
        - api_key:
            - write:team
components:
  schemas:
    MarkConversationAsWonBody:
      required:
        - email
        - idempotencyKey
      type: object
      properties:
        email:
          type: string
          example: user@example.com
          description: The email address of the lead.
        idempotencyKey:
          type: string
          example: aac843f5-69ab-4f88-9afb-0ed33a383ee4
          description: A unique identifier for the goal. For example, if you are marking a conversation as won because a meeting is scheduled, use the meeting ID; or if you are marking a conversation as won because a user signed up, use your user ID.
    Success:
      required:
        - success
      type: object
      properties:
        success:
          type: boolean
          example: true
    Team:
      required:
        - id
        - cursor
        - name
        - createdAt
        - updatedAt
        - timeZone
        - followUpStrategy
        - followUpIntervalDays
        - followUpMaxCount
      type: object
      properties:
        id:
          type: string
          example: tea_2MSb8jd6VDptcAcVJuPcJhte3Yc
          description: The unique ID of the team, starting with `tea_`.
        cursor:
          type: integer
          example: 1
          description: The pagination cursor of the team.
        name:
          type: string
          example: My Team
          description: The name of the team.
        createdAt:
          type: string
          format: date-time
          example: 2022-29-12T00:00:00.000Z
          description: The date and time the team was created.
        updatedAt:
          type: string
          format: date-time
          example: 2022-29-12T00:00:00.000Z
          description: The date and time the team was last updated.
        deletedAt:
          type: string
          format: date-time
          example: 2022-29-12T00:00:00.000Z
          description: The date and time the team was deleted, available only if the team is deleted.
        timeZone:
          type: string
          example: America/Los_Angeles
          description: The default timezone of the team.
        stripeCustomerIdentifier:
          type: string
          example: cus_NS6PU15OHxLZUW
          description: The Stripe customer identifier, available only if the team has a subscription.
        stripeSubscriptionIdentifier:
          type: string
          example: sub_1MhF5tHHGwPWDScpd7i4KLIi
          description: The Stripe subscription identifier, available only if the team has a subscription.
        followUpStrategy:
          type: string
          example: FIBONACCI
          enum: [EXPONENTIAL, FIBONACCI, LINEAR]
          description: The follow up strategy for the team.
        followUpIntervalDays:
          type: integer
          example: 3
          description: The minimum number of days to wait before following up.
        followUpMaxCount:
          type: integer
          example: 6
          description: The maximum number of follow ups to send.
    UpdateTeamBody:
      type: object
      properties:
        name:
          type: string
          example: My Team
          description: The name of the team.
        timeZone:
          type: string
          example: America/Los_Angeles
          description: The default timezone of the team.
        followUpStrategy:
          type: string
          example: FIBONACCI
          enum: [EXPONENTIAL, FIBONACCI, LINEAR]
          description: The follow up strategy for the team.
        followUpIntervalDays:
          type: integer
          example: 3
          description: The minimum number of days to wait before following up.
        followUpMaxCount:
          type: integer
          example: 6
          description: The maximum number of follow ups to send.
  requestBodies:
    MarkConversationAsWonBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MarkConversationAsWonBody"
    UpdateTeamBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTeamBody"
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization
      description: You can generate an API key by logging in to your FirstQuadrant account and navigating to Settings -> Apps and enabling "FirstQuadrant API". The API key should begin with "fqa_".
